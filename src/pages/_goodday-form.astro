<!-- <pre>
:default
    fullname
    phone
    ic
    gender
    age
    address1
    address2
    poskod
    state
:checkbox-showb
    b-fullname
    b-phone
    b-ic
    b-relation
    agree
    tnc
</pre> -->
<form
  id="formspree__goodday"
  class="needs-validation"
  action="https://formspree.io/f/xayrnlra"
  method="POST"
  enctype="multipart/form-data"
>
  <h3 class="text-uppercase">Participant Information</h3>
  <div class="row g-3">
    <div class="col-sm-6">
      <label for="fullName" class="form-label">Name</label>
      <input
        type="text"
        class="form-control alphabets-only"
        id="fullname"
        name="fullname"
        placeholder="Enter your name as per IC"
        required
      />
      <div class="invalid-feedback">Valid full name is required.</div>
    </div>

    <div class="col-sm-6">
      <label for="phone" class="form-label">Contact Number</label>
      <input
        type="text"
        class="form-control numbers-only-12"
        id="phone"
        name="phone"
        placeholder="e.g. 010 888 1800"
        required
      />
      <div class="invalid-feedback">Valid contact number is required.</div>
    </div>

    <div class="col-sm-6">
      <label for="ic" class="form-label">Identification Number</label>
      <input
        type="text"
        class="form-control ic-format"
        id="ic"
        name="ic"
        placeholder="e.g. 000000-00-0000"
        required
      />
      <div class="invalid-feedback">Valid IC Number is required.</div>
    </div>

    <div class="col-6 col-sm-3">
      <label for="gender" class="form-label">Gender</label>
      <select
        id="gender"
        name="gender"
        class="form-select"
        aria-label="Select Gender"
      >
        <option selected disabled value="-">Select</option>
        <option value="male">Male</option>
        <option value="female">Female</option>
        <!-- <option value="-">Prefer not to say</option> -->
      </select>
    </div>

    <div class="col-6 col-sm-3">
      <label for="age" class="form-label">Age</label>
      <input
        type="text"
        class="form-control numbers-only-3"
        id="age"
        name="age"
        placeholder="As of 2024"
      />
    </div>

    <div class="col-sm-9">
      <label for="address1" class="form-label">Address 1</label>
      <input
        type="text"
        class="form-control"
        id="address1"
        name="address1"
        placeholder="Line 1"
      />

      <label for="address2" class="form-label">Address 2</label>
      <input
        type="text"
        class="form-control"
        id="address2"
        name="address2"
        placeholder="Line 2"
      />
    </div>

    <div class="col-sm-3">
      <label for="poskod" class="form-label">Postcode</label>
      <input
        type="text"
        class="form-control numbers-only-6"
        id="poskod"
        name="poskod"
        placeholder="e.g. 80000"
      />

      <label for="state" class="form-label">States</label>
      <select
        id="state"
        name="state"
        class="form-select"
        aria-label="Select state"
      >
        <option selected disabled>Select</option>
        <option value="Johor">Johor</option>
        <option value="Kedah">Kedah</option>
        <option value="Kelantan">Kelantan</option>
        <option value="Kuala Lumpur">Kuala Lumpur</option>
        <option value="Labuan">Labuan</option>
        <option value="Melaka">Melaka</option>
        <option value="Negeri Sembilan">Negeri Sembilan</option>
        <option value="Pahang">Pahang</option>
        <option value="Penang">Penang</option>
        <option value="Perak">Perak</option>
        <option value="Perlis">Perlis</option>
        <option value="Putrajaya">Putrajaya</option>
        <option value="Sabah">Sabah</option>
        <option value="Sarawak">Sarawak</option>
        <option value="Selangor">Selangor</option>
        <option value="Terengganu">Terengganu</option>
      </select>
    </div>
  </div>

  <div class="row py-4">
    <div class="col-sm-4">
      <div class="form-label">
        <label class="form-check-label" for="game_exp">
          Gaming Experiences
        </label>
      </div>
      <div class="form-check form-check-inline">
        <input
          class="form-check-input"
          type="radio"
          name="game_exp"
          id="game_exp_yes"
        />
        <label class="form-check-label" for="game_exp_yes"> Yes</label>
      </div>
      <div class="form-check form-check-inline">
        <input
          class="form-check-input"
          type="radio"
          name="game_exp"
          id="game_exp_no"
        />
        <label class="form-check-label" for="game_exp_no"> No</label>
      </div>
    </div>
    <div class="col-sm-8">
      <div id="game_exp_box">
        <label for="game_exp_names" class="form-label"
          >Name of game(s) played before:</label
        >
        <input
          type="text"
          class="form-control"
          id="game_exp_names"
          name="game_exp_names"
          placeholder="Only fill in if any"
        />
      </div>
    </div>
  </div>

  <div class="row">
    <div class="col-12">
      <div class="mb-3">
        <label for="formFile" class="form-label"
          >Add Participant Photo
          <small>(Featured if shortlisted)</small>
        </label>
        <input
          class="form-control"
          type="file"
          name="attachment"
          accept="image/png, image/jpeg, image/jpg"
          required
        />
      </div>
    </div>
  </div>

  <div class="row">
    <div class="col-6 col-sm-3">
      <label for="language" class="form-label">Language preferred:</label>
      <select
        id="language"
        name="language"
        class="form-select"
        aria-label="Select Language"
      >
        <option value="eng" selected>English</option>
        <option value="bm">Bahasa Malaysia</option>
        <!-- <option value="-">Others</option> -->
      </select>
    </div>
  </div>

  <div class="row py-4">
    <div class="col-12">
      <div class="form-check">
        <label class="form-check-label" for="register_behalf">
          Are you registering on behalf of someone?
        </label>
        <input
          class="form-check-input"
          type="checkbox"
          id="register_behalf"
        />
      </div>
    </div>
  </div>

  <!-- if #register_behalf checked, only activate #behalf -->
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      let register_behalf = document.getElementById("register_behalf");
      let behalf = document.getElementById("behalf");

      behalf.style.display = "none";

      register_behalf.addEventListener("change", () => {
        if (register_behalf.checked) {
          behalf.style.display = "block";
        } else {
          behalf.style.display = "none";
        }
      });
    });

    // #game_exp_yes is true only reveal #game_exp_names, if #game+exp_no, hide #game_exp_names
    document.addEventListener("DOMContentLoaded", () => {
      let game_exp_yes = document.getElementById("game_exp_yes");
      let game_exp_no = document.getElementById("game_exp_no");
      let game_exp_box = document.getElementById("game_exp_box");

      game_exp_box.style.display = "none";

      game_exp_yes.addEventListener("change", () => {
        if (game_exp_yes.checked) {
          game_exp_box.style.display = "block";
        } else {
          game_exp_box.style.display = "none";
        }
      });

      game_exp_no.addEventListener("change", () => {
        if (game_exp_no.checked) {
          game_exp_box.style.display = "none";
        } else {
          game_exp_box.style.display = "block";
        }
      });
    });

    // class to validate input fields to only numbers
    document.addEventListener("DOMContentLoaded", () => {
      let numbersOnly = document.querySelectorAll(".numbers-only");
      numbersOnly.forEach((input) => {
        input.addEventListener("input", (e) => {
          e.target.value = e.target.value.replace(/[^0-9]/g, "");
        });
      });
    });

    // maxlength 6
    document.addEventListener("DOMContentLoaded", () => {
      let numbersOnly = document.querySelectorAll(".numbers-only-6");
      numbersOnly.forEach((input) => {
        input.setAttribute("maxlength", "6");

        input.addEventListener("input", (e) => {
          e.target.value = e.target.value.replace(/[^0-9]/g, "");
        });
      });
    });

    // maxlength 3, for age
    document.addEventListener("DOMContentLoaded", () => {
      let numbersOnly = document.querySelectorAll(".numbers-only-3");
      numbersOnly.forEach((input) => {
        input.setAttribute("maxlength", "3");

        input.addEventListener("input", (e) => {
          e.target.value = e.target.value.replace(/[^0-9]/g, "");
        });
      });
    });

    // numbers-only-12
    document.addEventListener("DOMContentLoaded", () => {
      let numbersOnly = document.querySelectorAll(".numbers-only-12");
      numbersOnly.forEach((input) => {
        input.setAttribute("maxlength", "12");

        input.addEventListener("input", (e) => {
          e.target.value = e.target.value.replace(/[^0-9]/g, "");
        });
      });
    });

    // A class to validate and format input fields to only numbers e.g. 000000-00-0000, maxlength 12
    /* document.addEventListener("DOMContentLoaded", () => {
      let icFormat = document.querySelectorAll(".ic-format");
      icFormat.forEach((input) => {
        // Set the maxlength attribute
        input.setAttribute("maxlength", "14");

        input.addEventListener("input", (e) => {
          // Remove non-digit characters
          let inputElement = e.target;
          let value = inputElement.value.replace(/\D/g, "");

          // Dynamically add dashes based on the input length
          if (value.length > 8) {
            value = value.replace(/(\d{6})(\d{2})(\d+)/, "$1-$2-$3");
          } else if (value.length > 6) {
            value = value.replace(/(\d{6})(\d+)/, "$1-$2");
          }

          // Update the input value
          inputElement.value = value;
        });
      });
    }); */

    document.addEventListener("DOMContentLoaded", () => {
      let icFormat = document.querySelectorAll(".ic-format");
      icFormat.forEach((input) => {
        // Set the maxlength attribute
        input.setAttribute("maxlength", "14"); // Increase maxlength to account for dashes

        input.addEventListener("input", (e) => {
          let inputElement = e.target;
          let value = inputElement.value.replace(/[^\d-]/g, ""); // Allow digits and dash

          // Remove any improperly placed dashes
          value = value
            .replace(/^-+|-+$/g, "") // Remove starting and ending dashes
            .replace(/-{2,}/g, "-") // Replace multiple dashes with a single dash
            .replace(/(?<!^)-(?=\d{6,}$)/g, "") // Remove dash if not at position 7 or 10
            .replace(/^(\d{6})-?(\d{2})-?(\d+)/, "$1-$2-$3"); // Format with dashes

          // Update the input value
          inputElement.value = value;
        });
      });
    });

    // a class to validate and format input fields to only alphabets, max length 128
    document.addEventListener("DOMContentLoaded", () => {
      let alphabetsOnly = document.querySelectorAll(".alphabets-only");
      alphabetsOnly.forEach((input) => {
        input.setAttribute("maxlength", "128");

        input.addEventListener("input", (e) => {
          e.target.value = e.target.value.replace(/[^a-zA-Z\s]/g, "");
        });
      });
    });

    // after off-focus from id="ic", take the first 6 digits of the Malaysia IC number and calculate the age, then fill it into id="age"
    document.addEventListener("DOMContentLoaded", () => {
      let ic = document.getElementById("ic");
      let age = document.getElementById("age");

      ic.addEventListener("blur", () => {
        let icValue = ic.value.replace(/\D/g, "");
        let yearPrefix =
          new Date().getFullYear() >= 2000 &&
          parseInt(icValue.substring(0, 2)) <= 22
            ? "20"
            : "19"; // Adjust year prefix based on current logic and assumptions
        let fullYear = yearPrefix + icValue.substring(0, 2);
        let birthDate = new Date(
          fullYear,
          parseInt(icValue.substring(2, 4)) - 1,
          parseInt(icValue.substring(4, 6))
        );
        let today = new Date();
        let ageValue = today.getFullYear() - birthDate.getFullYear();
        let m = today.getMonth() - birthDate.getMonth();

        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
          ageValue--;
        }

        age.value = ageValue;
      });
    });
  </script>

  <section id="behalf">
    <div class="row gy-3">
      <div class="col-sm-6">
        <label for="b-fullName" class="form-label">Name</label>
        <input
          type="text"
          class="form-control alphabets-only"
          id="b-fullname"
          name="b-fullname"
          placeholder="Enter your name as per IC"
          
        />
        <div class="invalid-feedback">Valid full name is required.</div>
      </div>

      <div class="col-sm-6">
        <label for="b-phone" class="form-label">Contact Number</label>
        <input
          type="text"
          class="form-control numbers-only-12"
          id="b-phone"
          name="b-phone"
          placeholder="e.g. 010 888 1800"
          
        />
        <div class="invalid-feedback">Valid contact number is required.</div>
      </div>

      <div class="col-sm-6">
        <label for="b-ic" class="form-label">Identification Number</label>
        <input
          type="text"
          class="form-control ic-format"
          id="b-ic"
          name="b-ic"
          placeholder="e.g. 000000-00-0000"
          
        />
        <div class="invalid-feedback">Valid IC Number is required.</div>
      </div>

      <div class="col-sm-6">
        <label for="b-relation" class="form-label"
          >Relationship with Participant</label
        >
        <input
          type="text"
          class="form-control"
          id="b-relation"
          name="b-relation"
          placeholder="e.g. Guardian"
          
        />
        <div class="invalid-feedback">
          Please state your relationship with Participant.
        </div>
      </div>
    </div>
  </section>

  <hr />

  <div class="form-check">
    <input type="checkbox" class="form-check-input" id="agree-partake" />
    <label class="form-check-label" for="agree-partake">
      Participant Release: I authorise Fishermen Integrated Sdn Bhd, on behalf
      of Etika Beverages Sdn Bhd, and those acting pursuant to its authority,
      to:
      <ol style="list-style-type: lower-roman;">
        <li>
          Record my participation and appearance on video, audio, film,
          photography, or any other medium;
        </li>
        <li>
          Use my name, likeness, voice and/or biographical material in
          connection there to;
        </li>
        <li>
          Exhibit or distribute such material in whole or in part without
          restrictions or limitations for any publicity or promotional purpose
          which Fishermen Integrated Sdn Bhd, and those acting pursuant to its
          authority, deem appropriate.
        </li>
      </ol>
    </label>
  </div>

  <div class="form-check">
    <input type="checkbox" class="form-check-input" id="agree-tnc" />
    <label class="form-check-label" for="agree-tnc">
      I have read and agree to the <a
        href="goodday/Goodday Charge - Boomers2Gamers T&C (16 February 2024) CLEAN.pdf"
        target="_blank">terms and conditions</a
      >.
    </label>
  </div>

  <hr class="my-4" />

  <!-- <a href="#"></a> -->
  <!-- <button type="submit">
    <img src="/goodday-esport/btn-submit.jpg" alt="">
  </button> -->

  <input
    type="image"
    src="/goodday/btn-submit.svg"
    border="0"
    width="220"
    alt="Submit"
  />

  <p id="my-form-status"></p>

  <!-- <button type="button" id="fill_placeholders">Fill with Placeholders</button> -->
</form>

<script>
  // document.addEventListener("DOMContentLoaded", () => {
  //   let fill_placeholders = document.getElementById("fill_placeholders");

  //   fill_placeholders.addEventListener("click", fillWithPlaceholders);
  // });

  // fillWithPlaceholders();

  function fillWithPlaceholders() {
    // List of input IDs
    const inputIds = [
      "fullname",
      "phone",
      "ic",
      "gender",
      "age",
      "address1",
      "address2",
      "poskod",
      "state",
      // "register_behalf",

      "b-fullname",
      "b-phone",
      "b-ic",
      "b-relation",
      // "agree-partake",
      // "agree-tnc",
    ];

    inputIds.forEach((id) => {
      const element = document.getElementById(id);
      if (element && element.placeholder) {
        element.value = element.placeholder;
      }
    });

    // For checkboxes (e.g., 'agree', 'tnc'), set them as checked or not based on your preference
    document.getElementById("register_behalf").checked = true; // Example for checkbox
    document.getElementById("agree-partake").checked = true; // Example for checkbox
    document.getElementById("agree-tnc").checked = true; // Example for checkbox
  }

  var form = document.getElementById("formspree__goodday");

  async function handleSubmit(event) {
    event.preventDefault();
    var data = new FormData(event.target);
    fetch(event.target.action, {
      method: event.target.method,
      body: data,
      headers: {
        Accept: "application/json",
      },
    })
      .then((response) => handleResponse(response))
      .catch((error) =>
        showAlert("danger", "Oops! There was a problem submitting your form")
      );
  }

  function handleResponse(response) {
    if (response.ok) {
      showAlert("success", "Thanks for your submission!");
      form.reset();
    } else {
      response.json().then((data) => {
        if (Object.hasOwn(data, "errors")) {
          const errorMessage = data["errors"]
            .map((error) => error["message"])
            .join(", ");
          showAlert("danger", errorMessage);
        } else {
          showAlert("danger", "Oops! There was a problem submitting your form");
        }
      });
    }
  }

  function showAlert(type, message) {
    const alertHTML = `<div class="alert alert-${type} alert-slide-down" role="alert">
                        ${message}
                      </div>`;
    document.body.innerHTML += alertHTML;
    setTimeout(() => {
      document.querySelector(".alert").remove();
    }, 5000); // Adjust time as needed
  }

  form.addEventListener("submit", handleSubmit);
</script>

<style>
  h3,
  label {
    font-family: "Source Sans Variable", sans-serif;
    font-weight: bold;
    color: var(--brown);
  }

  .form-select,
  .form-control {
    /* display: block;
    width: 100%;
    padding: 0.375rem 0.75rem;
    font-size: 1rem;
    font-weight: 400;
    line-height: 1.5;
    color: var(--bs-body-color);
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background-color: var(--bs-body-bg);
    background-clip: padding-box; */
    /* border: var(--bs-border-width) solid var(--bs-border-color); */
    --bs-border-width: 2px;
    --bs-border-color: var(--brown);
    --bs-border-radius: 0;
    --bs-body-bg: 0;
    /* border-radius: var(--bs-border-radius);
    transition:
      border-color 0.15s ease-in-out,
      box-shadow 0.15s ease-in-out; */
  }
  .form-control::placeholder {
    --brown-rgb: 79, 45, 33;
    color: rgba(var(--brown-rgb), 0.5);
  }
  .form-check-input {
    --bs-form-check-bg: var(--bs-body-bg);
    /* flex-shrink: 0; */
    width: 1.2em;
    height: 1.2em;
    margin-top: 0.15em;
    margin-right:;
    border: var(--bs-border-width) solid var(--bs-border-color);
    background-color: var(--bs-form-check-bg);
    background-image: var(--bs-form-check-bg-image);
  }
</style>

<style is:global>
  @keyframes slideDown {
    from {
      top: -50px;
      opacity: 0;
    }
    to {
      top: 0;
      opacity: 1;
    }
  }

  .alert.alert-slide-down {
    position: fixed;
    top: 1rem;
    left: 1rem;
    right: 1rem;
    z-index: 1050; /* Ensure it appears above other content */
    animation: slideDown 0.5s ease forwards;
    margin-top: 1rem;
  }
</style>
